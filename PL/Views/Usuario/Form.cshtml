@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>

    <div class="row">
        <div class="col-md-12">
            <h3>@ViewBag.Titulo</h3>
            <h5>Ingrese los datos</h5>
        </div>
    </div>

</div>
@using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.IdUsuario, new { @class = "control-label col-md-2 hidden" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "form-control hidden" })
                @Html.ValidationMessageFor(model => model.IdUsuario)
            </div>
        </div>

        <div class="col-md-3">

            @Html.LabelFor(model => model.Nombre)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-person" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Nombre)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.ApellidoPaterno)
            <div class="input-group mb-3">
                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApellidoPaterno)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.ApellidoMaterno)
            <div class="input-group mb-3">
                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApellidoMaterno)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Sexo)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-gender-ambiguous" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sexo)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.CURP)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-person-square" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CURP)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.UserName)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-person-circle" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Email)
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-envelope" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-telephone-plus" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Telefono)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Celular, new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-phone" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.Celular, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Celular)
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.FechaNacimiento, new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-calendar-date" style="color: midnightblue"></i></span>
                @Html.TextBoxFor(model => model.FechaNacimiento, "Selecciona la fecha", new { @class = "form-control", @id = "txtFechaNacimiento" })
                
                @Html.ValidationMessageFor(model => model.FechaNacimiento)
                @*@Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)*@
            </div>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Rol.IdRol, new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1"><i class="bi bi-person-lines-fill" style="color: midnightblue"></i></span>
                @*@Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })*@
                @*@Html.ValidationMessageFor(model => model.Rol.IdRol)*@
                @* aqui va el Drop Down List *@
                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona una opcion", new { @class = "form-control" })
            </div>
        </div>

    </div>
    <div class="col-md-4">
        @Html.Label("Pais")
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-flag-fill" style="color: midnightblue"></i></span>
            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un pais", new { @class = "form-control", @id = "ddlPais" })
            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
        </div>
    </div>
    <div class="col-md-4">
        @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Estados)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-pin-map-fill" style="color: midnightblue"></i></span>
            @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
            }
            else
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
            }
        </div>
    </div>


    <div class="col-md-4">
        @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-pin-map" style="color: midnightblue"></i></span>
            @if (Model.Direccion.Colonia.Municipio.Municipios == null)
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
            }
            else
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
            }
        </div>
    </div>


    <div class="col-md-4">
        @Html.LabelFor(model => model.Direccion.Colonia.Colonias)
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-pin-map" style="color: midnightblue"></i></span>
            @if (Model.Direccion.Colonia.Colonias == null)
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
            }
            else
            {
                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
            }
        </div>
    </div>


    <div class="form-group" style="display: none;">
        @Html.LabelFor(model => model.Direccion.IdDireccion, new { @class = "control-label col-md-2 hidden" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.Direccion.IdDireccion, new { @class = "form-control hidden" })
            @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)
        </div>
    </div>


    <div class="col-md-3">
        @Html.LabelFor(model => model.Direccion.Calle, new { @class = "control-label col-md-2" })
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-signpost" style="color: midnightblue"></i></span>
            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Direccion.Calle)
        </div>
    </div>

    <div class="col-md-3">
        @Html.LabelFor(model => model.Direccion.NumeroInterior, new { @class = "control-label col-md-2" })
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-house-door-fill" style="color: midnightblue"></i></span>
            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
        </div>
    </div>

    <div class="col-md-3">
        @Html.LabelFor(model => model.Direccion.NumeroExterior, new { @class = "control-label col-md-2" })
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-house-door" style="color: midnightblue"></i></span>
            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
        </div>
    </div>

     <div class="col-md-3">
        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-house-door" style="color: midnightblue"></i></span>
            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtPassword1" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        
    </div>

    <div class="col-md-3">
        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-house-door" style="color: midnightblue"></i></span>
            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtPassword2", @onblur = "return VerificarPassword(event,'lblErrorContrasenia')" })
            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger"})
        </div>
        @Html.Label("", null, new {@id = "lblErrorContrasenia"})
    </div>

    <div class="col-md-3">

        @Html.LabelFor(model=> model.Imagen)

        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
            <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="validateFile(this), readURL(this);  " />
        </div>

        @if (Model.Imagen != null)
        {

            <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

        }
        else
        {
            <img id="Img" src="~/Imagenes/SinRostro.jpg" style="width:250px ; height:250px" />
        }
        @Html.HiddenFor(model=> model.Imagen)

    </div>

    <div class="form-group">
        <div class="col-md-3">
            <input type="submit" value="Guardar" class="btn btn-success" />
            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
        </div>
    </div>

    <div class="form-group" style="display: none;">
        @Html.LabelFor(model => model.Estatus, new { @class = "control-label col-md-2 hidden" })
        <div class="col-md-3">
            @Html.TextBoxFor(model => model.Estatus, new { @class = "form-control hidden" })
            @Html.ValidationMessageFor(model => model.Estatus)
        </div>
    </div>

}






@section Scripts
    {
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script type="text/javascript">

        $(document).ready(function () {
                   $("#ddlPais").change(function () {
                       $("#ddlEstado").empty();
                       $.ajax({
                           type: 'GET',
                           url: '@Url.Action("EstadoGetByIdPais")',
                           dataType: 'json',
                           data: { IdPais: $("#ddlPais").val() },
                           success: function (estados) {
                               $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                               $.each(estados, function (i, estados) {
                                   $("#ddlEstado").append('<option value="'
                                                              + estados.idEstado + '">'
                                                              + estados.nombre + '</option>');
                               });
                           },
                           error: function (ex) {
                               alert('Failed.' + ex);
                           }
                       });
                   });

               });

                $("#ddlEstado").change(function () {
                       $("#ddlMunicipio").empty();
                       $.ajax({
                           type: 'GET',
                           url: '@Url.Action("MunicipioGetByIdEstado")',
                           dataType: 'json',
                           data: { IdEstado: $("#ddlEstado").val() },
                           success: function (municipios) {
                               $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                               $.each(municipios, function (i, municipios) {
                                   $("#ddlMunicipio").append('<option value="'
                                                              + municipios.idMunicipio + '">'
                                                              + municipios.nombre + '</option>');
                               });
                           },
                           error: function (ex) {
                               alert('Failed.' + ex);
                           }
                       });
                   });

                   $("#ddlMunicipio").change(function () {
                       $("#ddlColonia").empty();
                       $.ajax({
                           type: 'GET',
                           url: '@Url.Action("ColoniaGetByIdMunicipio")',
                           dataType: 'json',
                           data: { IdMunicipio: $("#ddlMunicipio").val() },
                           success: function (colonias) {
                               $("#ddlColonia").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                               $.each(colonias, function (i, colonias) {
                                   $("#ddlColonia").append('<option value="'
                                                              + colonias.idColonia + '">'
                                                              + colonias.nombre + '</option>');
                               });
                           },
                           error: function (ex) {
                               alert('Failed.' + ex);
                           }
                       });
                   });

                    function validateFile()
                    {
                        var allowedExtension = ['jpeg', 'jpg', 'png'];
                        var fileExtension = document.getElementById('IFImage').value.split('.').pop().toLowerCase();
                        var isValidFile = false;

                            for(var index in allowedExtension) {

                                if(fileExtension === allowedExtension[index]) {
                                    isValidFile = true;
                                    break;
                                }
                            }

                            if(!isValidFile) {
                                alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                                document.getElementById('IFImage').value = ""
                            }

                            return isValidFile;
                    }
                    function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#Img')
                              .attr('src', e.target.result);

                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }

                 $(function () {
          $("#txtFechaNacimiento").datepicker({
              dateFormat: 'dd-mm-yy',
                                      changeMonth: true,
                                      changeYear: true
          });
    } );

     function VerificarPassword()
              {
              pass1= document.getElementById("txtPassword1");
              pass2= document.getElementById("txtPassword2");
              if(pass1.value!=pass2.value)
              {
              pass1.style.borderColor="red";
              pass1.style.borderColor="red";
              $('#lblErrorContrasenia'+ controlId).text("Las contrasenias no coinciden");
              $('#lblErrorContrasenia'+ controlId).css({"color":"red"});
              return false;
              }
              else
              {
              pass1.style.borderColor="green";
              pass1.style.borderColor="green";
              $('#lblErrorContrasenia'+ controlId).text("");
               return true;
              }
              }


</script>
    }


